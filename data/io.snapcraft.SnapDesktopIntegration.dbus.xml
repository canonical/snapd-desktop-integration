<node>
    <!-- io.snapcraft.SnapDesktopIntegration:
        @short_description: Interface for desktop integration of Snapd

        This D-Bus interface allows to achieve better integration of
        snapd and snap utilities by allowing to show native windows
        with messages instead of relying on system notifications,
        which can be insufficient for our purposes.

        It is better to use an specific DBus interface instead of GtkActions
        because this allows to implement a Qt version if desired without frictions.
    -->
    <interface name="io.snapcraft.SnapDesktopIntegration">
        <!--
            ApplicationIsBeingRefreshed:
            @application_name: the name of the application name
            @lock_file: the full path to the lock file, to allow
                        the daemon to detect when the window must
                        be closed, or an empty string to not monitor
                        any lock file.
            @extra_parameters: a dictionary with extra optional parameters.

            Method used to notify to the user that the snap that
            they wanted to run is being refreshed, and they have
            to wait until the process has finished.
        -->
        <method name="ApplicationIsBeingRefreshed">
            <arg direction="in" type="s" name="application_name"/>
            <arg direction="in" type="s" name="lock_file"/>
            <arg direction="in" type="a{sv}" name="extra_parameters"/>
        </method>
        <!--
            ApplicationRefreshCompleted:
            @application_name: the name of the application name
            @extra_parameters: a dictionary with extra optional parameters

            Method used to notify the daemon that the refresh is completed
            and the dialog can be closed.
        -->
        <method name="ApplicationRefreshCompleted">
            <arg direction="in" type="s" name="application_name"/>
            <arg direction="in" type="a{sv}" name="extra_parameters"/>
        </method>
        <!--
             ApplicationRefreshPulsed:
             @application_name: the name of the application name
             @bar_text: the text to show over the pulsed bar
             @extra_parameters: a dictionary with extra optional parameters.
             Method used to notify the daemon that the progress bar must be
             set to 'pulsed'.
        -->
        <method name="ApplicationRefreshPulsed">
            <arg direction="in" type="s" name="application_name"/>
            <arg direction="in" type="s" name="bar_text"/>
            <arg direction="in" type="a{sv}" name="extra_parameters"/>
         </method>
        <!--
             ApplicationRefreshPercentage:
             @application_name: the name of the application name
             @bar_text: the text to show over the pulsed bar (if empty, the percentage will be shown)
             @percentage: the percent value to set the progress bar (0.0-1.0)
             @extra_parameters: a dictionary with extra optional parameters.
             Method used to set the progress bar to an specific value.
        -->
        <method name="ApplicationRefreshPercentage">
            <arg direction="in" type="s" name="application_name"/>
            <arg direction="in" type="s" name="bar_text"/>
            <arg direction="in" type="d" name="percentage"/>
            <arg direction="in" type="a{sv}" name="extra_parameters"/>
        </method>
    </interface>
</node>
